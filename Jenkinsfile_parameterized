#!groovy
@Library(value="Infrastructure", changelog=false) _

def channel = '#bsp-build-notices'

def apiTestSecrets = [
  'bulk-scan-${env}': [
    // Base64-encoded PKCS 12 key store, containing client's private key and certificate known to the API
    secret('test-valid-key-store', 'TEST_VALID_KEY_STORE'),
    secret('test-valid-key-store-password', 'TEST_VALID_KEY_STORE_PASSWORD'),

    // Base64-encoded PKCS 12 key store containing private key and certificate known to the API, but expired
    secret('test-expired-key-store', 'TEST_EXPIRED_KEY_STORE'),
    secret('test-expired-key-store-password', 'TEST_EXPIRED_KEY_STORE_PASSWORD'),

    // Base64-encoded PKCS12 key store containing private key and certificate known to the API, but not yet valid
    secret('test-not-yet-valid-key-store', 'TEST_NOT_YET_VALID_KEY_STORE'),
    secret('test-not-yet-valid-key-store-password', 'TEST_NOT_YET_VALID_KEY_STORE_PASSWORD'),

    secret('test-subscription-key', 'TEST_SUBSCRIPTION_KEY'),

    // Test private key used by third party supplier to sign zip files
    secret('test-private-key-der', 'TEST_PRIVATE_KEY_DER')
  ]
]

def commonSecrets = [
  'bulk-scan-${env}': [
    secret('storage-account-primary-key', 'TEST_STORAGE_ACCOUNT_KEY')
  ],
  's2s-${env}': [
    secret('microservicekey-bulk-scan-processor-tests', 'TEST_S2S_SECRET')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

properties([
  parameters([
    string(name: 'PRODUCT_NAME', defaultValue: 'bulk-scan', description: ''),
    string(name: 'APP', defaultValue: 'processor', description: ''),
    string(name: 'TYPE', defaultValue: 'java', description: ''),
    string(name: 'ENVIRONMENT', defaultValue: 'sandbox', description: 'Environment where code should be built and deployed'),
    choice(name: 'SUBSCRIPTION', choices: 'sandbox\nnonprod\nprod', description: 'Azure subscriptions available to build in')
  ]),
  [$class: 'GithubProjectProperty', projectUrlStr: 'github.com/hmcts/bulk-scan-processor'],
  pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {
  enableDbMigration('bulk-scan')
  enableSlackNotifications(channel)
  enableApiGatewayTest()

  onPR() {
    loadVaultSecrets(commonSecrets)
  }

  onNonPR() {
    loadVaultSecrets(commonSecrets + apiTestSecrets)
  }
}
