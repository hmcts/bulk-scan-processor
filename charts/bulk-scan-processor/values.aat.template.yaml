java:
  environment:
    STORAGE_BLOB_SELECTED_CONTAINER: "ALL"
    FLYWAY_NOOP_STRATEGY: "false"
    QUEUE_ENVELOPE_NAME: "envelopes-staging"
    QUEUE_PROCESSED_ENVELOPES_NAME: "processed-envelopes-staging"
    STORAGE_URL: https://bulkscanaatstaging.blob.core.windows.net
    QUEUE_NOTIFICATIONS_NAMESPACE: reform-scan-servicebus-{{ .Values.global.environment }}-premium
    BULK_SCANNING_DB_USER_NAME: "{{ .Values.postgresql.auth.username}}"
    BULK_SCANNING_DB_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    BULK_SCANNING_DB_NAME: "{{ .Values.postgresql.auth.database}}"
    BULK_SCANNING_DB_HOST: "{{ .Release.Name }}-postgresql"
    FLYWAY_URL: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database}}"
    FLYWAY_USER: "{{ .Values.postgresql.auth.username}}"
    FLYWAY_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    SCAN_DELAY: "2000"
    LEASE_ACQUIRE_DELAY_IN_SECONDS: "60"
    UPLOAD_TASK_ENABLED: "true"
    UPLOAD_TASK_DELAY: "2000"
  keyVaults:
    "bulk-scan":
      secrets:
        - name: s2s-secret
          alias: S2S_SECRET
        - name: envelopes-staging-queue-send-shared-access-key
          alias: QUEUE_ENVELOPE_SEND_ACCESS_KEY
        - name: notifications-queue-send-shared-access-key
          alias: QUEUE_NOTIFICATIONS_SEND_ACCESS_KEY
        - name: processed-envelopes-staging-queue-listen-shared-access-key
          alias: QUEUE_PROCESSED_ENVELOPES_READ_ACCESS_KEY
        - name: storage-account-staging-name
          alias: storage.account_name
        - name: storage-account-staging-primary-key
          alias: storage.key
        - name: app-insights-instrumentation-key
          alias: azure.application-insights.instrumentation-key
        - name: reports-email-username
          alias: SMTP_USERNAME
        - name: reports-email-password
          alias: SMTP_PASSWORD
        - name:  reports-recipients
          alias: REPORTS_RECIPIENTS
        - name: actions-api-key
          alias: ACTIONS_API_KEY
        - name: idam-client-secret
          alias: IDAM_CLIENT_SECRET
        - name: idam-users-bulkscan-username
          alias: idam.users.bulkscan.username
        - name: idam-users-bulkscan-password
          alias: idam.users.bulkscan.password
        - name: idam-users-cmc-username
          alias: idam.users.cmc.username
        - name: idam-users-cmc-password
          alias: idam.users.cmc.password
        - name: idam-users-div-username
          alias: idam.users.divorce.username
        - name: idam-users-div-password
          alias: idam.users.divorce.password
        - name: idam-users-probate-username
          alias: idam.users.probate.username
        - name: idam-users-probate-password
          alias: idam.users.probate.password
        - name: idam-users-publiclaw-username
          alias: idam.users.publiclaw.username
        - name: idam-users-publiclaw-password
          alias: idam.users.publiclaw.password
        - name: idam-users-sscs-username
          alias: idam.users.sscs.username
        - name: idam-users-sscs-password
          alias: idam.users.sscs.password
        - name: launch-darkly-sdk-key
          alias: LAUNCH_DARKLY_SDK_KEY
        - name: launch-darkly-offline-mode
          alias: LAUNCH_DARKLY_OFFLINE_MODE

  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}

  postgresql:
    enabled: true
    image:
      registry: hmctspublic.azurecr.io
      repository: imported/bitnami/postgresql
      tag: '15'
