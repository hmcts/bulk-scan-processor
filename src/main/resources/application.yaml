server:
  port: 8581

management:
  endpoints:
    web:
      base-path: /

spring:
  application:
    name: Bulk Scanning
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${BULK_SCANNING_DB_HOST:localhost}:${BULK_SCANNING_DB_PORT:5432}/${BULK_SCANNING_DB_NAME:bulkscans}${BULK_SCANNING_DB_CONN_OPTIONS:}
    username: ${BULK_SCANNING_DB_USER_NAME:bulkscanner}
    password: ${BULK_SCANNING_DB_PASSWORD:}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: BulkScanHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        jdbc:
          lob:
            # silence the 'wall-of-text' - unnecessary exception throw about blob types
            non_contextual_creation: true

info:
  app:
    name: Bulk Scanning
    description: Ingest scanned documents.

storage:
  account_name: ${STORAGE_ACCOUNT_NAME:bulkscanning}
  key: ${STORAGE_KEY:dGVzdA==} #Base 64 encoded
  blob_lease_timeout: ${STORAGE_BLOB_LEASE_TIMEOUT:15}
  blob_processing_delay_in_minutes: ${STORAGE_BLOB_PROCESSING_DELAY_IN_MINUTES:0}
  signature_algorithm: ${STORAGE_BLOB_SIGNATURE_ALGORITHM:none}  # none or sha256withrsa
  public_key_der_file: ${STORAGE_BLOB_PUBLIC_KEY:trusted_public_key.der} # public key file in der format

servicebus:
  queue_envelope_send: ${QUEUE_ENVELOPE_SEND}

accesstoken:
  serviceConfig:
    - serviceName: sscs
      validity: ${SAS_TOKEN_VALIDITY:300} #In seconds
    - serviceName: test
      validity: ${SAS_TOKEN_VALIDITY:300} #In seconds

idam:
  s2s-auth:
    url: ${S2S_URL:http://localhost:8081}
    secret: ${S2S_SECRET:MKX9BVWS5T5UGURS}
    name: ${S2S_NAME:bulk_scan_processor}

dm:
  api_gateway:
    url: ${DOCUMENT_MANAGEMENT_URL:http://localhost:8082}

scheduling:
  pool: ${SCHEDULING_POOL:10}
  lock_at_most_for: ${SCHEDULING_LOCK_AT_MOST_FOR:PT10M} # 10 minutes in ISO-8601
  task:
    scan:
      delay: ${SCAN_DELAY:30000} # In milliseconds
      enabled: ${SCAN_ENABLED:false}
    reupload:
      batch: ${REUPLOAD_BATCH:20} # fetch 20 envelopes at once to process them. 0 for all
      delay: ${REUPLOAD_DELAY:1800000} # In milliseconds, 30min
      enabled: ${REUPLOAD_ENABLED:false}
      max_tries: ${REUPLOAD_MAX_TRIES:5}

envelope-access:
  mappings:
     - jurisdiction: SSCS
       readService: sscs
       updateService: TBD
     - jurisdiction: TEST
       readService: bulk_scan_processor_tests
       updateService: bulk_scan_processor_tests
